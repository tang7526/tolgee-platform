"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var suggesting_1 = require("./suggesting");
describe('suggesting', function () {
    test('it suggest with empty string', function () {
        var suggestions = suggesting_1.suggest('');
        expect(suggestions[0].englishName).toEqual('English');
        expect(suggestions[0].originalName).toEqual('English');
        expect(suggestions).toHaveLength(10);
    });
    test('it suggest for cs', function () {
        expect(suggesting_1.suggest('cs')[0].englishName).toEqual('Czech');
        expect(suggesting_1.suggest('cs')[0].originalName).toEqual('čeština');
    });
    test('it suggest for malformed', function () {
        expect(suggesting_1.suggest('cs__asdaíšáěý')[0].englishName).toEqual('English');
    });
    test('it suggest for original name', function () {
        expect(suggesting_1.suggest('češ')[0].englishName).toContain('Czech');
    });
    test('it suggest for english name', function () {
        expect(suggesting_1.suggest('Czech')[0].englishName).toContain('Czech');
    });
    test('it ignores case', function () {
        expect(suggesting_1.suggest('czech')[0].englishName).toContain('Czech');
    });
    test('it ignores latin', function () {
        expect(suggesting_1.suggest('cestina')[0].englishName).toEqual('Czech');
    });
    test('it orders by diffLength', function () {
        var suggestions = suggesting_1.suggest('est');
        expect(suggestions[1].languageId).toEqual('et');
    });
    test('it orders by population', function () {
        var suggestions = suggesting_1.suggest('it');
        expect(suggestions[0].languageId).toEqual('it');
        expect(suggestions[1].languageId).toEqual('it-IT');
    });
    test('it orders by population', function () {
        var suggestions = suggesting_1.suggest('it');
        expect(suggestions[0].languageId).toEqual('it');
        expect(suggestions[1].languageId).toEqual('it-IT');
    });
});
//# sourceMappingURL=suggesting.test.js.map