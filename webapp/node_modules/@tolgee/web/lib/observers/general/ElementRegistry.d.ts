import { NsFallback, ObserverOptionsInternal } from '@tolgee/core';
import { TranslationOnClick } from '@tolgee/core';
import { ElementMeta, NodeMeta, TolgeeElement } from '../../types';
import { ElementStoreType } from './ElementStore';
export declare const ElementRegistry: (options: ObserverOptionsInternal, elementStore: ElementStoreType, onClick: TranslationOnClick) => Readonly<{
    register: (element: Element, node: Node, nodeMeta: NodeMeta) => void;
    forEachElement: (callback: (el: TolgeeElement, meta: ElementMeta) => void) => void;
    findAll: (key?: string, ns?: NsFallback) => ElementMeta[];
    refreshAll: () => void;
    run: (mouseHighlight: boolean) => void;
    stop: () => void;
}>;
export declare type ElementRegistryInstance = ReturnType<typeof ElementRegistry>;
