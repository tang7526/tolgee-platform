{"version":3,"file":"tolgee-react.esm.min.mjs","sources":["../src/TolgeeProvider.tsx","../src/GlobalContextPlugin.tsx","../src/useTolgeeContext.ts","../src/hooks.ts","../src/useTranslateInternal.ts","../src/useTranslate.ts","../src/tagsTools.tsx","../src/T.tsx","../src/useTolgee.ts"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react';\nimport { TolgeeInstance } from '@tolgee/web';\nimport { ReactOptions, TolgeeReactContext } from './types';\n\nexport const DEFAULT_REACT_OPTIONS: ReactOptions = {\n  useSuspense: true,\n};\n\nexport const TolgeeProviderContext = React.createContext<\n  TolgeeReactContext | undefined\n>(undefined);\n\ntype Props = {\n  children?: React.ReactNode;\n  tolgee: TolgeeInstance;\n  options?: ReactOptions;\n  fallback?: React.ReactNode;\n};\n\nexport const TolgeeProvider: React.FC<Props> = ({\n  tolgee,\n  options,\n  children,\n  fallback,\n}) => {\n  const [loading, setLoading] = useState(!tolgee.isLoaded());\n\n  useEffect(() => {\n    tolgee.run().finally(() => {\n      setLoading(false);\n    });\n    return () => {\n      tolgee.stop();\n    };\n  }, [tolgee]);\n\n  const optionsWithDefault = { ...DEFAULT_REACT_OPTIONS, ...options };\n\n  if (optionsWithDefault.useSuspense) {\n    return (\n      <TolgeeProviderContext.Provider\n        value={{ tolgee, options: optionsWithDefault }}\n      >\n        {loading ? (\n          fallback\n        ) : (\n          <Suspense fallback={fallback || null}>{children}</Suspense>\n        )}\n      </TolgeeProviderContext.Provider>\n    );\n  }\n\n  return (\n    <TolgeeProviderContext.Provider\n      value={{ tolgee, options: optionsWithDefault }}\n    >\n      {loading ? fallback : children}\n    </TolgeeProviderContext.Provider>\n  );\n};\n","import type { TolgeePlugin } from '@tolgee/web';\nimport { DEFAULT_REACT_OPTIONS } from './TolgeeProvider';\nimport type { ReactOptions, TolgeeReactContext } from './types';\n\nlet globalContext: TolgeeReactContext | undefined;\n\nexport const GlobalContextPlugin =\n  (options?: Partial<ReactOptions>): TolgeePlugin =>\n  (tolgee) => {\n    globalContext = {\n      tolgee,\n      options: { ...DEFAULT_REACT_OPTIONS, ...options },\n    };\n    return tolgee;\n  };\n\nexport function getGlobalContext() {\n  return globalContext;\n}\n","import { useContext } from 'react';\nimport { getGlobalContext } from './GlobalContextPlugin';\nimport { TolgeeProviderContext } from './TolgeeProvider';\n\nexport const useTolgeeContext = () => {\n  const context = useContext(TolgeeProviderContext) || getGlobalContext();\n  if (!context) {\n    throw new Error(\n      \"Couldn't find tolgee instance, did you forgot to use `TolgeeProvider`?\"\n    );\n  }\n  return context;\n};\n","import { useCallback, useState } from 'react';\n\nexport const useRerender = () => {\n  const [instance, setCounter] = useState(0);\n\n  const rerender = useCallback(() => {\n    setCounter((num) => num + 1);\n  }, [setCounter]);\n  return { instance, rerender };\n};\n","import { useCallback, useEffect, useRef } from 'react';\nimport {\n  SubscriptionSelective,\n  TranslateProps,\n  NsFallback,\n  getFallbackArray,\n  getFallback,\n} from '@tolgee/web';\n\nimport { useTolgeeContext } from './useTolgeeContext';\nimport { ReactOptions } from './types';\nimport { useRerender } from './hooks';\n\nexport const useTranslateInternal = (\n  ns?: NsFallback,\n  options?: ReactOptions\n) => {\n  const { tolgee, options: defaultOptions } = useTolgeeContext();\n  const namespaces = getFallback(ns);\n  const namespacesJoined = getFallbackArray(namespaces).join(':');\n\n  const currentOptions = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  // dummy state to enable re-rendering\n  const { rerender, instance } = useRerender();\n\n  const subscriptionRef = useRef<SubscriptionSelective>();\n\n  const subscriptionQueue = useRef([] as NsFallback[]);\n  subscriptionQueue.current = [];\n\n  const subscribeToNs = (ns: NsFallback) => {\n    subscriptionQueue.current.push(ns);\n    subscriptionRef.current?.subscribeNs(ns);\n  };\n\n  const isLoaded = tolgee.isLoaded(namespaces);\n\n  useEffect(() => {\n    const subscription = tolgee.onNsUpdate(rerender);\n    subscriptionRef.current = subscription;\n    if (!isLoaded) {\n      subscription.subscribeNs(namespaces);\n    }\n    subscriptionQueue.current.forEach((ns) => {\n      subscription!.subscribeNs(ns);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [isLoaded, namespacesJoined, tolgee]);\n\n  useEffect(() => {\n    tolgee.addActiveNs(namespaces);\n    return () => tolgee.removeActiveNs(namespaces);\n  }, [namespacesJoined, tolgee]);\n\n  const t = useCallback(\n    (props: TranslateProps<any>) => {\n      const fallbackNs = props.ns ?? namespaces?.[0];\n      subscribeToNs(fallbackNs);\n      return tolgee.t({ ...props, ns: fallbackNs }) as any;\n    },\n    [tolgee, instance]\n  );\n\n  if (currentOptions.useSuspense && !isLoaded) {\n    throw tolgee.addActiveNs(namespaces, true);\n  }\n\n  return { t, isLoading: !isLoaded };\n};\n","import { useCallback } from 'react';\nimport { TFnType, getTranslateProps, DefaultParamType } from '@tolgee/web';\n\nimport { useTranslateInternal } from './useTranslateInternal';\nimport { ReactOptions } from './types';\n\nexport const useTranslate = (\n  ns?: string[] | string,\n  options?: ReactOptions\n) => {\n  const { t: tInternal, isLoading } = useTranslateInternal(ns, options);\n\n  const t: TFnType<DefaultParamType, string> = useCallback(\n    (...params: any) => {\n      // @ts-ignore\n      const props = getTranslateProps(...params);\n      return tInternal(props);\n    },\n    [tInternal]\n  );\n\n  return { t, isLoading };\n};\n","import { TranslateParams } from '@tolgee/web';\nimport React from 'react';\n\nimport { ParamsTags } from './types';\n\nexport const wrapTagHandlers = (\n  params: TranslateParams<ParamsTags> | undefined\n) => {\n  if (!params) {\n    return undefined;\n  }\n\n  const result: any = {};\n\n  Object.entries(params || {}).forEach(([key, value]) => {\n    if (typeof value === 'function') {\n      result[key] = (chunk: any) => {\n        return value(addReactKeys(chunk));\n      };\n    } else if (React.isValidElement(value as any)) {\n      const el = value as React.ReactElement;\n      result[key] = (chunk: any) => {\n        return el.props.children !== undefined\n          ? React.cloneElement(el)\n          : React.cloneElement(el, {}, addReactKeys(chunk));\n      };\n    } else {\n      result[key] = value;\n    }\n  });\n\n  return result;\n};\n\nexport const addReactKeys = (\n  val: React.ReactNode | React.ReactNode[] | undefined\n) => {\n  if (Array.isArray(val)) {\n    return React.Children.toArray(val);\n  } else {\n    return val;\n  }\n};\n","import { NsType, TranslateParams } from '@tolgee/web';\nimport React, { FunctionComponent } from 'react';\nimport { addReactKeys, wrapTagHandlers } from './tagsTools';\n\nimport { ParamsTags } from './types';\nimport { useTranslateInternal } from './useTranslateInternal';\n\ntype TProps = {\n  params?: TranslateParams<ParamsTags>;\n  children?: string;\n  noWrap?: boolean;\n  keyName?: string;\n  ns?: NsType;\n  defaultValue?: string;\n};\n\nexport const T: FunctionComponent<TProps> = (props: TProps) => {\n  const key = props.keyName || props.children;\n  if (key === undefined) {\n    // eslint-disable-next-line no-console\n    console.error('T component: keyName not defined');\n  }\n  const defaultValue =\n    props.defaultValue || (props.keyName ? props.children : undefined);\n\n  const { t } = useTranslateInternal();\n\n  const translation = addReactKeys(\n    t({\n      key: key!,\n      params: wrapTagHandlers(props.params),\n      defaultValue,\n      noWrap: props.noWrap,\n      ns: props.ns,\n    })\n  );\n\n  return <>{translation}</>;\n};\n","import { TolgeeEvent, TolgeeInstance } from '@tolgee/web';\nimport { useEffect } from 'react';\nimport { useRerender } from './hooks';\nimport { useTolgeeContext } from './useTolgeeContext';\n\nexport const useTolgee = (events?: TolgeeEvent[]): TolgeeInstance => {\n  const { tolgee } = useTolgeeContext();\n\n  const { rerender } = useRerender();\n\n  useEffect(() => {\n    const listeners = events?.map((e) => tolgee.on(e, rerender));\n    return () => {\n      listeners?.forEach((listener) => listener.unsubscribe());\n    };\n  }, [events?.join(':')]);\n\n  return tolgee;\n};\n"],"names":["DEFAULT_REACT_OPTIONS","useSuspense","TolgeeProviderContext","React","createContext","undefined","TolgeeProvider","tolgee","options","children","fallback","loading","setLoading","useState","isLoaded","useEffect","run","finally","stop","optionsWithDefault","Object","assign","createElement","Provider","value","Suspense","globalContext","GlobalContextPlugin","useTolgeeContext","context","useContext","Error","useRerender","instance","setCounter","rerender","useCallback","num","useTranslateInternal","ns","defaultOptions","namespaces","getFallback","namespacesJoined","getFallbackArray","join","currentOptions","subscriptionRef","useRef","subscriptionQueue","current","subscription","onNsUpdate","subscribeNs","forEach","unsubscribe","addActiveNs","removeActiveNs","t","props","fallbackNs","_a","push","subscribeToNs","isLoading","useTranslate","tInternal","params","getTranslateProps","wrapTagHandlers","result","entries","key","chunk","addReactKeys","isValidElement","el","cloneElement","val","Array","isArray","Children","toArray","T","keyName","console","error","defaultValue","translation","noWrap","Fragment","useTolgee","events","listeners","map","e","on","listener"],"mappings":"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"}