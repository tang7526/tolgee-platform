import { FallbackGeneral, FallbackLanguageOption } from './types';
export declare function isPromise(value: any): boolean;
export declare const valueOrPromise: <T, R>(value: T | Promise<T>, callback: (value: T) => R) => R | Promise<R>;
export declare const missingOptionError: (option: string) => string;
export declare function isObject(item: any): boolean;
export declare function getFallback(value: FallbackGeneral): string[] | undefined;
export declare function getFallbackArray(value: FallbackGeneral): string[];
export declare function getFallbackFromStruct(language: string, fallbackLanguage: FallbackLanguageOption): string[];
export declare function unique<T>(arr: T[]): T[];
export declare function sanitizeUrl(url: string | undefined): string | undefined;
export declare function getErrorMessage(error: any): string | undefined;
